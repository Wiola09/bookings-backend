syntax = "proto3";

package pb;

import "google/api/annotations.proto";
// import "rpc_create_user.proto";
// import "rpc_update_user.proto";
// import "rpc_login_user.proto";
// import "rpc_verify_email.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";

import "rpc_create_room.proto";
import "rpc_create_restriction.proto";
import "rpc_create_reservation.proto";
import "rpc_create_room_restriction.proto";

option go_package = "github.com/tijanadmi/bookings_backend/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Bookings Backend API";
        version: "1.1";
        contact: {
            name: "TDI Spaces";
            url: "https://github.com/tijanadmi";
            email: "tijanadmi@yahoo.com";
        };
    };
};

service Bookings {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "Create new user";
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update user";
            summary: "Update user";
        };
    }
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user and get access token & refresh token";
            summary: "Login user";
        };
    }
    // rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
    //     option (google.api.http) = {
    //         get: "/v1/verify_email"
    //     };
    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         description: "Use this API to verify user's email address";
    //         summary: "Verify email";
    //     };
    // }

    rpc CreateRoom (CreateRoomRequest) returns (CreateRoomResponse) {
        option (google.api.http) = {
            post: "/v1/create_room"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new room";
            summary: "Create new room";
        };
    }
    rpc CreateRestriction (CreateRestrictionRequest) returns (CreateRestrictionResponse) {
        option (google.api.http) = {
            post: "/v1/create_restriction"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new restriction";
            summary: "Create new restriction";
        };
    }
    rpc CreateReservation (CreateReservationRequest) returns (CreateReservationResponse) {
        option (google.api.http) = {
            post: "/v1/create_reservation"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new reservation";
            summary: "Create new reservation";
        };
    }
    rpc CreateRoomRestriction (CreateRoomRestrictionRequest) returns (CreateRoomRestrictionResponse) {
        option (google.api.http) = {
            post: "/v1/create_room_restriction"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new room restriction";
            summary: "Create new room restriction";
        };
    }
}